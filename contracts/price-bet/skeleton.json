{
    "name": "PriceBet",
    "specification": "file:spec.md",
    "properties": {
        "join-not-revert": "a transaction `join()` does not revert if the amount sent is equal to `initial_pot`, no player has joined yet, and the sender has enough ETH.",
        "join-revert": "a transaction `join()` reverts if the amount sent along with the transaction is different from `initial_pot` or another player has already joined.",
        "win-not-revert": "a transaction `win()` does not revert if the deadline has not expired, the sender is the player, and the oracle exchange rate is greater than or equal to the oracle exchange rate. We assume that the oracle is reactive.",
        "win-revert": "a transaction `win()` reverts if the deadline has expired, or the sender is not the player, or the oracle exchange rate is less than the oracle exchange rate. Assume that address oracle actually contains a deployment of contract Oracle.",
        "timeout-not-revert": "a transaction `timeout()` does not revert if the deadline has passed.",
        "timeout-revert": "a transaction `timeout()` reverts if the deadline has not passed yet.",
        "timeout-postcondition": "a successful `timeout()` transfers the whole contract balance to the owner.",
        "only-owner-or-player-receive":	"in any state after `join()`, only the owner or the player can receive ETH from the contract.",
        "eventually-win": "eventually a user can withdraw the whole pot.",
        "no-frozen-funds": "after the deadline, any user can perform some transaction after which the entire pot is trasferred to the owner address.",
        "eventually-balance-zero": "eventually the contract balance goes to 0 (assuming the fairness condition that timeout() is called at least once after the deadline).",
        "owner-cannot-withdraw-before-deadline": "if the deadline has not passed yet, the owner cannot withdraw the pot.",
        "player-cannot-withdraw-after-deadline": "if the deadline has passed yet, the player cannot withdraw the pot.",
        "join-only-once": "a `join()` transaction can only be called successfully once.",
        "price-below-player-lose": "if the oracle exchange rate is always below the threshold `exchange_rate` before the deadline, the player cannot redeem the pot.", 
        "price-above-player-win": "if at some point before the deadline the oracle exchange rate goes above the threshold `exchange_rate`, the player can redeem the pot.",
        "winner-payout"	: "the winner receives at least twice the initial pot (assume that the oracle is not paid)"
    }
}
