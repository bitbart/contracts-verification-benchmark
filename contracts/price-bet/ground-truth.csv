property,version,truth,footnote-md
eventually-balance-zero-receive,v1,1,
eventually-balance-zero-receive,v11,1,
eventually-balance-zero-receive,v12,1,
eventually-balance-zero-receive,v13,1,
eventually-balance-zero-receive,v14,1,
eventually-balance-zero-receive,v15,0,"If player has not joined, timeout cannot be called, hence balance cannot be emptied"
eventually-balance-zero-receive,v16,1,
eventually-balance-zero-receive,v2,1,
eventually-balance-zero-receive,v3,0,
eventually-balance-zero-receive,v4,1,
eventually-balance-zero-receive,v5,1,
eventually-balance-zero-receive,v6,1,
eventually-balance-zero-receive,v7,1,
eventually-balance-zero-receive,v8,1,
eventually-balance-zero-receive,v9,1,
eventually-balance-zero,v10,0,
eventually-balance-zero,v1,0,"Owner has a receive that always fails"
eventually-balance-zero,v11,1,"after timeout+1000, anyone can withdraw"
eventually-balance-zero,v12,0,
eventually-balance-zero,v13,0,
eventually-balance-zero,v14,0,
eventually-balance-zero,v15,0,
eventually-balance-zero,v16,0,
eventually-balance-zero,v2,0,
eventually-balance-zero,v3,0,
eventually-balance-zero,v4,0,
eventually-balance-zero,v5,0,
eventually-balance-zero,v6,0,
eventually-balance-zero,v7,0,
eventually-balance-zero,v8,0,
eventually-balance-zero,v9,0,
eventually-withdraw-receive-owner,v10,1,
eventually-withdraw-receive-owner,v11,1,
eventually-withdraw-receive-owner,v1,1,"Owner fires timeout after the deadline"
eventually-withdraw-receive-owner,v12,1,
eventually-withdraw-receive-owner,v13,1,
eventually-withdraw-receive-owner,v14,1,
eventually-withdraw-receive-owner,v15,1,
eventually-withdraw-receive-owner,v16,1,
eventually-withdraw-receive-owner,v2,1,
eventually-withdraw-receive-owner,v3,0,"timeout() empties the contract balance, then join() succeeds, making the balance equal to initial_pot. At this point, it is not possible to withdraw 2*initial_pot."
eventually-withdraw-receive-owner,v4,1,
eventually-withdraw-receive-owner,v5,1,
eventually-withdraw-receive-owner,v6,1,
eventually-withdraw-receive-owner,v7,1,
eventually-withdraw-receive-owner,v8,1,
eventually-withdraw-receive-owner,v9,1,
eventually-withdraw-receive-player,v10,0,
eventually-withdraw-receive-player,v1,0,"The oracle exchange rate is not >= the target exchange rate, and the receive method of owner can always revert"
eventually-withdraw-receive-player,v11,1,"after timeout+1000, anyone can withdraw"
eventually-withdraw-receive-player,v12,0,
eventually-withdraw-receive-player,v13,0,
eventually-withdraw-receive-player,v14,0,
eventually-withdraw-receive-player,v15,0,
eventually-withdraw-receive-player,v16,0,
eventually-withdraw-receive-player,v2,0,
eventually-withdraw-receive-player,v3,0,
eventually-withdraw-receive-player,v4,0,
eventually-withdraw-receive-player,v5,0,
eventually-withdraw-receive-player,v6,0,
eventually-withdraw-receive-player,v7,0,
eventually-withdraw-receive-player,v8,0,
eventually-withdraw-receive-player,v9,0,
eventually-withdraw,v10,0,
eventually-withdraw,v1,0,"Both owner and player have a receive that always fails"
eventually-withdraw,v11,1,"after timeout+1000, anyone can withdraw"
eventually-withdraw,v12,0,
eventually-withdraw,v13,0,
eventually-withdraw,v14,0,
eventually-withdraw,v15,0,
eventually-withdraw,v16,0,
eventually-withdraw,v2,0,
eventually-withdraw,v3,0,
eventually-withdraw,v4,0,
eventually-withdraw,v5,0,
eventually-withdraw,v6,0,
eventually-withdraw,v7,0,
eventually-withdraw,v8,0,
eventually-withdraw,v9,0,
join-balance-eq,v10,0,
join-balance-eq,v1,0,"selfdestruct"
join-balance-eq,v11,0,
join-balance-eq,v12,0,
join-balance-eq,v13,0,
join-balance-eq,v14,0,
join-balance-eq,v15,0,
join-balance-eq,v16,1,"join() succeeds if the previous contract balance is equal to the initial_pot"
join-balance-eq,v2,0,
join-balance-eq,v3,0,
join-balance-eq,v4,0,
join-balance-eq,v5,0,
join-balance-eq,v6,0,
join-balance-eq,v7,0,
join-balance-eq,v8,0,
join-balance-eq,v9,0,
join-balance-geq,v10,1,"join() can be called after a timeout that emptied the balance"
join-balance-geq,v1,1,
join-balance-geq,v11,1,
join-balance-geq,v12,1,
join-balance-geq,v13,1,
join-balance-geq,v14,1,
join-balance-geq,v15,1,
join-balance-geq,v16,1,
join-balance-geq,v2,1,
join-balance-geq,v3,0,"timeout() can be called before the first join() emptying the balance"
join-balance-geq,v4,0,
join-balance-geq,v5,1,
join-balance-geq,v6,1,
join-balance-geq,v7,1,
join-balance-geq,v8,1,
join-balance-geq,v9,1,
join-not-revert,v10,1,
join-not-revert,v1,1,
join-not-revert,v11,1,
join-not-revert,v12,0,"join() with msg.sender==owner"
join-not-revert,v13,1,
join-not-revert,v14,1,
join-not-revert,v15,1,
join-not-revert,v16,0,"join() reverts if the previous contract balance is greater than the initial_pot"
join-not-revert,v2,1,
join-not-revert,v3,1,
join-not-revert,v4,1,
join-not-revert,v5,0,
join-not-revert,v6,1,
join-not-revert,v7,1,
join-not-revert,v8,1,
join-not-revert,v9,1,
join-only-once,v10,1,
join-only-once,v1,1,
join-only-once,v11,1,
join-only-once,v12,1,
join-only-once,v13,1,
join-only-once,v14,1,
join-only-once,v15,1,
join-only-once,v16,0,"join() win() selfdestruct() join()"
join-only-once,v2,0,"join does not check if player has already joined"
join-only-once,v3,1,
join-only-once,v4,1,
join-only-once,v5,1,
join-only-once,v6,0,"join forgets to update the player field"
join-only-once,v7,1,
join-only-once,v8,1,
join-only-once,v9,1,
join-player,v10,1,
join-player,v1,1,
join-player,v11,1,
join-player,v12,1,
join-player,v13,1,
join-player,v14,1,
join-player,v15,1,
join-player,v16,1,
join-player,v2,1,
join-player,v3,1,
join-player,v4,1,
join-player,v5,1,
join-player,v6,0,"join forgets to update the player field"
join-player,v7,1,
join-player,v8,1,
join-player,v9,1,
join-revert,v10,0,"join can be called after timeout"
join-revert,v1,1,
join-revert,v11,1,
join-revert,v12,1,
join-revert,v13,1,
join-revert,v14,1,
join-revert,v15,1,
join-revert,v16,0,"selfdestruct() join()"
join-revert,v2,0,"join does not check if player has already joined"
join-revert,v3,1,
join-revert,v4,0,"join does not require the player to deposit an amount corresponding to the initial pot"
join-revert,v5,0,"join requires the player to transfer an amount strictly greater to the initial pot"
join-revert,v6,1,"the `player` field can never be set"
join-revert,v7,1,
join-revert,v8,1,
join-revert,v9,1,
only-owner-or-player-receive,v10,0,
only-owner-or-player-receive,v1,0,"Low-level call in win and timeout can send ETH to any address"
only-owner-or-player-receive,v11,0,"after deadline+1000, anyone can redeem"
only-owner-or-player-receive,v12,0,
only-owner-or-player-receive,v13,0,
only-owner-or-player-receive,v14,1,"Uses transfer instead of low-level call to send ETH"
only-owner-or-player-receive,v15,0,
only-owner-or-player-receive,v16,0,
only-owner-or-player-receive,v2,0,
only-owner-or-player-receive,v3,0,
only-owner-or-player-receive,v4,0,
only-owner-or-player-receive,v5,0,
only-owner-or-player-receive,v6,0,
only-owner-or-player-receive,v7,0,
only-owner-or-player-receive,v8,0,
only-owner-or-player-receive,v9,0,
owner-cannot-receive-before-deadline-not-player,v10,0,
owner-cannot-receive-before-deadline-not-player,v1,0,"player calls win, and its low-level call can trigger an ETH transfer to owner"
owner-cannot-receive-before-deadline-not-player,v11,0,
owner-cannot-receive-before-deadline-not-player,v12,0,
owner-cannot-receive-before-deadline-not-player,v13,0,
owner-cannot-receive-before-deadline-not-player,v14,1,"win uses transfer instead of low-level, so owner cannot receive ETH directed to player"
owner-cannot-receive-before-deadline-not-player,v15,0,
owner-cannot-receive-before-deadline-not-player,v16,0,"owner can call win, and its low-level call can trigger an ETH transfer to owner"
owner-cannot-receive-before-deadline-not-player,v2,0,
owner-cannot-receive-before-deadline-not-player,v3,0,"owner can call timeout before the deadline"
owner-cannot-receive-before-deadline-not-player,v4,0,
owner-cannot-receive-before-deadline-not-player,v5,0,
owner-cannot-receive-before-deadline-not-player,v6,1,"player is the zero address, so win always reverts"
owner-cannot-receive-before-deadline-not-player,v7,0,
owner-cannot-receive-before-deadline-not-player,v8,0,
owner-cannot-receive-before-deadline-not-player,v9,0,
owner-cannot-receive-before-deadline,v10,0,
owner-cannot-receive-before-deadline,v1,0,"The owner may coincide with the player"
owner-cannot-receive-before-deadline,v11,0,
owner-cannot-receive-before-deadline,v12,0,"Even though the owner is different from the player, the low-level call in win can trigger an ETH transfer to owner"
owner-cannot-receive-before-deadline,v13,0,
owner-cannot-receive-before-deadline,v14,0,
owner-cannot-receive-before-deadline,v15,0,
owner-cannot-receive-before-deadline,v16,0,
owner-cannot-receive-before-deadline,v2,0,
owner-cannot-receive-before-deadline,v3,0,
owner-cannot-receive-before-deadline,v4,0,
owner-cannot-receive-before-deadline,v5,0,
owner-cannot-receive-before-deadline,v6,1,"Player is the zero address, so win always reverts"
owner-cannot-receive-before-deadline,v7,0,
owner-cannot-receive-before-deadline,v8,0,
owner-cannot-receive-before-deadline,v9,0,
owner-cannot-withdraw-before-deadline-not-player,v10,1,
owner-cannot-withdraw-before-deadline-not-player,v1,1,"owner cannot call win, since it is different from player"
owner-cannot-withdraw-before-deadline-not-player,v11,1,
owner-cannot-withdraw-before-deadline-not-player,v12,1,
owner-cannot-withdraw-before-deadline-not-player,v13,1,
owner-cannot-withdraw-before-deadline-not-player,v14,1,
owner-cannot-withdraw-before-deadline-not-player,v15,1,
owner-cannot-withdraw-before-deadline-not-player,v16,0,"owner can call win, and its low-level call can trigger an ETH transfer to owner"
owner-cannot-withdraw-before-deadline-not-player,v2,1,
owner-cannot-withdraw-before-deadline-not-player,v3,0,"owner can call timeout before the deadline"
owner-cannot-withdraw-before-deadline-not-player,v4,1,
owner-cannot-withdraw-before-deadline-not-player,v5,1,
owner-cannot-withdraw-before-deadline-not-player,v6,1,
owner-cannot-withdraw-before-deadline-not-player,v7,1,
owner-cannot-withdraw-before-deadline-not-player,v8,1,
owner-cannot-withdraw-before-deadline-not-player,v9,1,
owner-cannot-withdraw-before-deadline,v10,0,
owner-cannot-withdraw-before-deadline,v1,0,"The owner may coincide with the player"
owner-cannot-withdraw-before-deadline,v11,0,
owner-cannot-withdraw-before-deadline,v12,1,"The owner is different from the player, so it cannot trigger win (only player can), and cannot trigger timeout before the deadline"
owner-cannot-withdraw-before-deadline,v13,0,
owner-cannot-withdraw-before-deadline,v14,0,
owner-cannot-withdraw-before-deadline,v15,0,
owner-cannot-withdraw-before-deadline,v16,0,
owner-cannot-withdraw-before-deadline,v2,0,
owner-cannot-withdraw-before-deadline,v3,0,
owner-cannot-withdraw-before-deadline,v4,0,
owner-cannot-withdraw-before-deadline,v5,0,
owner-cannot-withdraw-before-deadline,v6,1,"player is the zero address, so win always reverts"
owner-cannot-withdraw-before-deadline,v7,0,
owner-cannot-withdraw-before-deadline,v8,0,
owner-cannot-withdraw-before-deadline,v9,0,
player-cannot-withdraw-after-deadline-not-owner,v10,0,
player-cannot-withdraw-after-deadline-not-owner,v1,0,"Anyone can call timeout, and its low-level call can trigger an ETH transfer to player"
player-cannot-withdraw-after-deadline-not-owner,v11,0,"Anyone can withdraw after second deadline"
player-cannot-withdraw-after-deadline-not-owner,v12,0,
player-cannot-withdraw-after-deadline-not-owner,v13,0,
player-cannot-withdraw-after-deadline-not-owner,v14,1,"timeout uses transfer instead of low-level call to send ETH"
player-cannot-withdraw-after-deadline-not-owner,v15,0,
player-cannot-withdraw-after-deadline-not-owner,v16,0,
player-cannot-withdraw-after-deadline-not-owner,v2,0,
player-cannot-withdraw-after-deadline-not-owner,v3,1,"timeout can only be called before the deadline"
player-cannot-withdraw-after-deadline-not-owner,v4,0,
player-cannot-withdraw-after-deadline-not-owner,v5,0,
player-cannot-withdraw-after-deadline-not-owner,v6,1,"The player address cannot be set"
player-cannot-withdraw-after-deadline-not-owner,v7,0,
player-cannot-withdraw-after-deadline-not-owner,v8,0,
player-cannot-withdraw-after-deadline-not-owner,v9,0,
player-cannot-withdraw-after-deadline,v10,0,
player-cannot-withdraw-after-deadline,v1,0,"The owner coincides with the player"
player-cannot-withdraw-after-deadline,v11,0,
player-cannot-withdraw-after-deadline,v12,1,
player-cannot-withdraw-after-deadline,v13,0,
player-cannot-withdraw-after-deadline,v14,0,
player-cannot-withdraw-after-deadline,v15,0,
player-cannot-withdraw-after-deadline,v16,0,
player-cannot-withdraw-after-deadline,v2,0,
player-cannot-withdraw-after-deadline,v3,1,"No one can withdraw after the deadline"
player-cannot-withdraw-after-deadline,v4,0,
player-cannot-withdraw-after-deadline,v5,0,
player-cannot-withdraw-after-deadline,v6,1,"The player address cannot be set"
player-cannot-withdraw-after-deadline,v7,0,
player-cannot-withdraw-after-deadline,v8,0,
player-cannot-withdraw-after-deadline,v9,0,
player-immutable,v10,1,
player-immutable,v1,1,
player-immutable,v11,1,
player-immutable,v12,1,
player-immutable,v13,1,
player-immutable,v14,1,
player-immutable,v15,0,"timeout resets player to zero address"
player-immutable,v16,0,"join() win() selfdestruct() join()"
player-immutable,v2,0,"join does not check if player has already joined"
player-immutable,v3,1,
player-immutable,v4,1,
player-immutable,v5,1,
player-immutable,v7,1,
player-immutable,v8,1,
player-immutable,v9,1,
price-above-player-win-frontrun,v10,0,
price-above-player-win-frontrun,v1,0,"The oracle can update prices so that win fails"
price-above-player-win-frontrun,v11,0,
price-above-player-win-frontrun,v12,0,
price-above-player-win-frontrun,v13,1,"In a state with block.number < deadline, it also holds that block.timestamp > deadline, so the owner can front-run the player with a timeout"
price-above-player-win-frontrun,v14,0,
price-above-player-win-frontrun,v15,0,
price-above-player-win-frontrun,v16,0,
price-above-player-win-frontrun,v2,0,
price-above-player-win-frontrun,v3,0,
price-above-player-win-frontrun,v4,0,
price-above-player-win-frontrun,v5,0,
price-above-player-win-frontrun,v6,0,
price-above-player-win-frontrun,v7,0,
price-above-player-win-frontrun,v8,0,
price-above-player-win-frontrun,v9,1,"win does not check the oracle exchange rate"
price-above-player-win,v10,1,
price-above-player-win,v1,1,
price-above-player-win,v11,1,
price-above-player-win,v12,1,
price-above-player-win,v13,0,"In a state where block.number < deadline, it also holds that block.timestamp > deadline, so the player cannot fire a win transaction"
price-above-player-win,v14,1,
price-above-player-win,v15,1,
price-above-player-win,v16,0,"win requires that the contract balance is equal to 2*initial_pot"
price-above-player-win,v2,1,
price-above-player-win,v3,1,
price-above-player-win,v4,1,
price-above-player-win,v5,1,
price-above-player-win,v6,0,"The player address cannot be set"
price-above-player-win,v7,1,
price-above-player-win,v8,0,"win only transfer 1 wei"
price-above-player-win,v9,1,"win does not check the oracle exchange rate"
price-below-player-lose-before-deadline-not-owner,v10,1,
price-below-player-lose-before-deadline-not-owner,v1,1,
price-below-player-lose-before-deadline-not-owner,v11,1,"The property requires that the player withdraws before the deadline"
price-below-player-lose-before-deadline-not-owner,v12,1,
price-below-player-lose-before-deadline-not-owner,v13,1,
price-below-player-lose-before-deadline-not-owner,v14,1,
price-below-player-lose-before-deadline-not-owner,v15,1,
price-below-player-lose-before-deadline-not-owner,v16,1,
price-below-player-lose-before-deadline-not-owner,v2,1,
price-below-player-lose-before-deadline-not-owner,v3,0,"anyone can call timeout before the deadline; its low-level call can trigger an ETH transfer to player"
price-below-player-lose-before-deadline-not-owner,v4,1,
price-below-player-lose-before-deadline-not-owner,v5,1,
price-below-player-lose-before-deadline-not-owner,v6,1,
price-below-player-lose-before-deadline-not-owner,v7,1,"The oracle exchange rate can become greater than the target exchange rate after the deadline"
price-below-player-lose-before-deadline-not-owner,v8,1,
price-below-player-lose-before-deadline-not-owner,v9,0,"win does not check the oracle exchange rate"
price-below-player-lose-not-owner,v10,1,
price-below-player-lose-not-owner,v1,1,
price-below-player-lose-not-owner,v11,0,"Anyone can withdraw after second deadline"
price-below-player-lose-not-owner,v12,1,
price-below-player-lose-not-owner,v13,1,
price-below-player-lose-not-owner,v14,1,
price-below-player-lose-not-owner,v15,1,
price-below-player-lose-not-owner,v16,1,
price-below-player-lose-not-owner,v2,1,
price-below-player-lose-not-owner,v3,0,"anyone can call timeout before the deadline; its low-level call can trigger an ETH transfer to player"
price-below-player-lose-not-owner,v4,1,
price-below-player-lose-not-owner,v5,1,
price-below-player-lose-not-owner,v6,1,
price-below-player-lose-not-owner,v7,1,"The oracle exchange rate can become greater than the target exchange rate after the deadline"
price-below-player-lose-not-owner,v8,1,
price-below-player-lose-not-owner,v9,0,"win does not check the oracle exchange rate"
price-below-player-lose,v10,0,
price-below-player-lose,v1,0,"The player and owner addresses could be equal"
price-below-player-lose,v11,0,
price-below-player-lose,v12,1,"The player address is different from the owner address"
price-below-player-lose,v13,0,
price-below-player-lose,v14,0,
price-below-player-lose,v15,0,
price-below-player-lose,v16,0,
price-below-player-lose,v2,0,
price-below-player-lose,v3,0,
price-below-player-lose,v4,0,
price-below-player-lose,v5,0,
price-below-player-lose,v6,1,"The player address cannot be set"
price-below-player-lose,v7,0,
price-below-player-lose,v8,0,
price-below-player-lose,v9,0,
timeout-balance-receive,v10,1,
timeout-balance-receive,v1,1,
timeout-balance-receive,v11,0,"after timeout+1000, anyone can withdraw"
timeout-balance-receive,v12,1,
timeout-balance-receive,v13,1,
timeout-balance-receive,v14,1,
timeout-balance-receive,v15,1,
timeout-balance-receive,v16,1,
timeout-balance-receive,v2,1,
timeout-balance-receive,v3,0,"timeout called before the deadline, after win"
timeout-balance-receive,v4,1,
timeout-balance-receive,v5,1,
timeout-balance-receive,v6,1,
timeout-balance-receive,v7,0,"win can be called also after the deadline"
timeout-balance-receive,v8,0,"win only transfer 1 wei"
timeout-balance-receive,v9,1,
timeout-balance,v10,0,
timeout-balance,v1,0,"Low-level call can trigger further transfers"
timeout-balance,v11,0,
timeout-balance,v12,0,
timeout-balance,v13,0,
timeout-balance,v14,1,"Uses transfer instead of low-level call to send ETH"
timeout-balance,v15,0,
timeout-balance,v16,1,
timeout-balance,v2,0,
timeout-balance,v3,0,
timeout-balance,v4,0,
timeout-balance,v5,0,
timeout-balance,v6,0,
timeout-balance,v7,0,
timeout-balance,v8,0,
timeout-balance,v9,0,
timeout-not-revert-receive,v10,1,
timeout-not-revert-receive,v1,1,
timeout-not-revert-receive,v11,1,"after timeout+1000, a sender with a failing receive can make timeout fail"
timeout-not-revert-receive,v12,1,
timeout-not-revert-receive,v13,1,
timeout-not-revert-receive,v14,1,
timeout-not-revert-receive,v15,0,"If player has not joined, timeout cannot be called"
timeout-not-revert-receive,v16,1,
timeout-not-revert-receive,v2,1,
timeout-not-revert-receive,v3,0,"timeout can only be called before the deadline"
timeout-not-revert-receive,v4,1,
timeout-not-revert-receive,v5,1,
timeout-not-revert-receive,v6,1,
timeout-not-revert-receive,v7,1,
timeout-not-revert-receive,v8,1,
timeout-not-revert-receive,v9,1,
timeout-not-revert,v10,0,
timeout-not-revert,v1,0,"Low-level call can fail"
timeout-not-revert,v11,0,
timeout-not-revert,v12,0,
timeout-not-revert,v13,0,
timeout-not-revert,v14,0,
timeout-not-revert,v15,0,
timeout-not-revert,v16,0,
timeout-not-revert,v2,0,
timeout-not-revert,v3,0,
timeout-not-revert,v4,0,
timeout-not-revert,v5,0,
timeout-not-revert,v6,0,
timeout-not-revert,v7,0,
timeout-not-revert,v8,0,
timeout-not-revert,v9,0,
timeout-revert,v10,1,
timeout-revert,v1,1,
timeout-revert,v11,1,
timeout-revert,v12,1,
timeout-revert,v13,1,
timeout-revert,v14,1,
timeout-revert,v15,1,
timeout-revert,v16,1,
timeout-revert,v2,1,
timeout-revert,v3,0,"timeout can only be called before the deadline"
timeout-revert,v4,1,
timeout-revert,v5,1,
timeout-revert,v6,1,
timeout-revert,v7,1,
timeout-revert,v8,1,
timeout-revert,v9,1,
transfer-pot-join,v10,0,
transfer-pot-join,v1,0,"After the first timeout(), the contract can receive an amount of ETH lower than the initial pot via the selfdestruct; then, the second timeout() will transfer such amount"
transfer-pot-join,v11,0,
transfer-pot-join,v12,0,
transfer-pot-join,v13,0,
transfer-pot-join,v14,0,
transfer-pot-join,v15,1,"Timeout can only be called once, if a player has joined"
transfer-pot-join,v16,0,
transfer-pot-join,v2,0,
transfer-pot-join,v3,0,"timeout can be called before win emptying the balance"
transfer-pot-join,v4,0,
transfer-pot-join,v5,0,
transfer-pot-join,v6,0,
transfer-pot-join,v7,0,
transfer-pot-join,v8,0,
transfer-pot-join,v9,0,
transfer-pot,v10,0,
transfer-pot,v1,0,"Player has not joined"
transfer-pot,v11,0,
transfer-pot,v12,0,
transfer-pot,v13,0,
transfer-pot,v14,0,
transfer-pot,v15,1,"Timeout can only be called once, if a player has joined"
transfer-pot,v16,0,
transfer-pot,v2,0,
transfer-pot,v3,0,
transfer-pot,v4,0,
transfer-pot,v5,0,
transfer-pot,v6,0,
transfer-pot,v7,0,
transfer-pot,v8,0,
transfer-pot,v9,0,
tx-assets-transfer-any,v10,0,
tx-assets-transfer-any,v1,0,"Owner has a receive that always fails"
tx-assets-transfer-any,v11,1,"after timeout+1000, anyone can withdraw"
tx-assets-transfer-any,v12,0,
tx-assets-transfer-any,v13,0,
tx-assets-transfer-any,v14,0,
tx-assets-transfer-any,v15,0,
tx-assets-transfer-any,v16,0,
tx-assets-transfer-any,v2,0,
tx-assets-transfer-any,v3,0,
tx-assets-transfer-any,v4,0,
tx-assets-transfer-any,v5,0,
tx-assets-transfer-any,v6,0,
tx-assets-transfer-any,v7,0,
tx-assets-transfer-any,v8,0,
tx-assets-transfer-any,v9,0,
tx-assets-transfer-owner,v10,0,
tx-assets-transfer-owner,v1,0,"Owner has a receive that always fails"
tx-assets-transfer-owner,v11,0,
tx-assets-transfer-owner,v12,0,
tx-assets-transfer-owner,v13,0,
tx-assets-transfer-owner,v14,0,
tx-assets-transfer-owner,v15,0,
tx-assets-transfer-owner,v16,0,
tx-assets-transfer-owner,v2,0,
tx-assets-transfer-owner,v3,0,
tx-assets-transfer-owner,v4,0,
tx-assets-transfer-owner,v5,0,
tx-assets-transfer-owner,v6,0,
tx-assets-transfer-owner,v7,0,
tx-assets-transfer-owner,v8,0,
tx-assets-transfer-owner,v9,0,
win-balance-receive,v10,1,
win-balance-receive,v1,1,
win-balance-receive,v11,1,
win-balance-receive,v12,1,
win-balance-receive,v13,1,
win-balance-receive,v14,1,
win-balance-receive,v15,1,
win-balance-receive,v16,1,
win-balance-receive,v2,1,
win-balance-receive,v3,1,
win-balance-receive,v4,1,
win-balance-receive,v5,1,
win-balance-receive,v6,1,"The balance of address(0) is increased"
win-balance-receive,v7,1,
win-balance-receive,v8,0,
win-balance-receive,v9,1,
win-balance,v10,0,
win-balance,v1,0,"The low-level call can trigger further transfers"
win-balance,v11,0,
win-balance,v12,0,
win-balance,v13,0,
win-balance,v14,1,"Uses transfer instead of low-level call to send ETH"
win-balance,v15,0,
win-balance,v16,0,
win-balance,v2,0,
win-balance,v3,0,
win-balance,v4,0,
win-balance,v5,0,
win-balance,v6,0,
win-balance,v7,0,
win-balance,v8,0,
win-balance,v9,0,
win-frontrun-not-oracle,v1,0,
win-frontrun-not-oracle,v10,0,
win-frontrun-not-oracle,v11,0,
win-frontrun-not-oracle,v12,0,
win-frontrun-not-oracle,v13,1,"In a state with block.number < deadline, it also holds that block.timestamp > deadline, so the owner can front-run the player with a timeout"
win-frontrun-not-oracle,v14,0,
win-frontrun-not-oracle,v15,0,
win-frontrun-not-oracle,v16,1,"the adversary fires a selfdestruct, since win requires that the contract balance is equal to 2*initial_pot"
win-frontrun-not-oracle,v2,1,"Anyone can call a join() and take the role of player"
win-frontrun-not-oracle,v3,1,"Anyone can call a timeout() and transfer the pot to the owner"
win-frontrun-not-oracle,v4,0,
win-frontrun-not-oracle,v5,0,
win-frontrun-not-oracle,v6,0,
win-frontrun-not-oracle,v7,0,
win-frontrun-not-oracle,v8,0,
win-frontrun-not-oracle,v9,0,
win-frontrun,v10,1,
win-frontrun,v11,1,
win-frontrun,v1,1,"The adversary is the oracle"
win-frontrun,v12,1,
win-frontrun,v13,1,
win-frontrun,v14,1,
win-frontrun,v15,1,
win-frontrun,v16,1,
win-frontrun,v2,1,
win-frontrun,v3,1,
win-frontrun,v4,1,
win-frontrun,v5,1,
win-frontrun,v6,1,
win-frontrun,v7,1,
win-frontrun,v8,1,
win-frontrun,v9,0,"win does not check the oracle exchange rate"
win-not-revert,v10,0,
win-not-revert,v1,0,"The low-level call can fail"
win-not-revert,v11,0,
win-not-revert,v12,0,
win-not-revert,v13,0,
win-not-revert,v14,0,
win-not-revert,v15,0,
win-not-revert,v16,0,
win-not-revert,v2,0,
win-not-revert,v3,0,
win-not-revert,v4,0,
win-not-revert,v5,0,
win-not-revert,v6,0,
win-not-revert,v7,0,
win-not-revert,v8,0,
win-not-revert,v9,0,
win-pot-receive,v10,1,
win-pot-receive,v1,1,
win-pot-receive,v11,1,
win-pot-receive,v12,1,
win-pot-receive,v13,1,
win-pot-receive,v14,1,
win-pot-receive,v15,1,
win-pot-receive,v16,1,
win-pot-receive,v2,1,
win-pot-receive,v3,0,"Timeout can be called before win, emptying the balance"
win-pot-receive,v4,0,"Join does not require the player to deposit an amount corresponding to the initial pot"
win-pot-receive,v5,1,
win-pot-receive,v6,1,
win-pot-receive,v7,0,"Win can be called after timeout"
win-pot-receive,v8,0,"Win only transfer 1 wei"
win-pot-receive,v9,1,
win-pot,v10,0,
win-pot,v1,0,"The low-level call can trigger further transfers"
win-pot,v11,0,
win-pot,v12,0,
win-pot,v13,0,
win-pot,v14,1,"Uses transfer instead of low-level call to send ETH"
win-pot,v15,0,
win-pot,v16,0,"Since win() is not payable, msg.value must be 0, hence the contract balance before the call must be equal to 2*initial_pot"
win-pot,v2,0,
win-pot,v3,0,
win-pot,v4,0,
win-pot,v5,0,
win-pot,v6,0,
win-pot,v7,0,
win-pot,v8,0,
win-pot,v9,0,
win-revert,v10,1,
win-revert,v1,1,
win-revert,v11,1,
win-revert,v12,1,
win-revert,v13,1,
win-revert,v14,1,
win-revert,v15,1,
win-revert,v16,0,"win does not require that the sender is the player"
win-revert,v2,1,
win-revert,v3,1,
win-revert,v4,1,
win-revert,v5,1,
win-revert,v6,1,
win-revert,v7,0,"win can be called also after the deadline"
win-revert,v8,1,
win-revert,v9,0,"win does not check the oracle exchange rate"