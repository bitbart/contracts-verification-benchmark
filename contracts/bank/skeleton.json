{
    "name": "Bank",
    "specification": "The Bank contract stores assets deposited by users, and and pays them out when required. The `deposit` method allows anyone to deposit assets. When a deposit is made, the corresponding amount is added to the account balance of the sender. The `withdraw` method allows the sender to receive any desired amount of assets deposited in their account. The contract checks that the depositor has sufficient funds in their account and then transfers the specified amount to the sender. In this version of the contract, the only asset handled by the contract is the ETH crypto-currency.",
    "properties": {
        "assets-dec-onlyif-deposit": "if the ETH balance of a user A are decreased after a transaction (of the Bank contract), then that transaction must be a `deposit` where A is the sender.",
        "assets-inc-onlyif-withdraw": "if the ETH balance of a user A are increased after a transaction (of the Bank contract), then that transaction must be a `withdraw` where A is the sender.",
        "credit-dec-onlyif-withdraw": "if the credit of a user A is decreased after a transaction (of the Bank contract), then that transaction must be a `withdraw` where A is the sender",
        "credit-inc-onlyif-deposit": "if the credit of a user A is increased after a transaction (of the Bank contract), then that transaction must be a `deposit` where A is the sender.",
        "credits-leq-balance": "the wei balance stored in the contract is (at least) equal to the sum of all the user credits", 
        "deposit-additivity": "two (successful) `deposit` of n1 and n2 wei (performed by the same sender) are equivalent to a single `deposit` of n1+n2 wei of T.",
        "deposit-assets-credit": "after a successful `deposit()`, the credits of `msg.sender` are increased by `msg.value`.",
        "deposit-assets-credit-others": "after a successful `deposit()`, the credit of any user but the sender is preserved.",
        "deposit-assets-transfer-others": "after a successful `deposit()`, the ETH balance of any user but the sender are preserved.",
        "deposit-contract-balance": "after a successful `deposit()`, the ETH balance of the contract is increased by `msg.value`.",
        "deposit-not-revert": "a `deposit` transaction never reverts",
        "deposit-revert": "a `deposit` transaction reverts if `msg.value` plus the current credits of `msg.sender` overflows.",
        "withdraw-additivity": "if the same sender can perform two (successful) `withdraw` of n1 and n2 wei, respectively, then the same sender can always obtain an equivalent effect (on the state of the Bank contract and on its own account) through a single `withdraw` of n1+n2 wei. Here equivalence neglects transaction fees.",
        "withdraw-assets-credit-others": "after a successful `withdraw(amount)`, the credit of any user but the sender is preserved.",
        "withdraw-assets-transfer-others": "after a successful `withdraw(amount)`, the ETH balance of any user but the sender are preserved.",
        "withdraw-contract-balance": "after a successful `withdraw(amount)`, the contract balance is decreased by `amount` wei.",
        "withdraw-not-revert": "a `withdraw(amount)` call does not revert if `amount` is bigger than zero and less or equal to the credit of `msg.sender`.",
        "withdraw-revert": "a `withdraw(amount)` call reverts if `amount` is zero or greater than the credit of `msg.sender`.",
        "withdraw-sender-credit": "after a successful `withdraw(amount)`, the credit of `msg.sender` is decreased by `amount`.",
        "withdraw-sender-rcv": "after a successful `withdraw(amount)`, the ETH balance of 'msg.sender` is increased by `amount` wei.",
        "withdraw-sender-rcv-EOA": "after a successful `withdraw(amount)` originated by an EOA, the ETH balance of the `msg.sender` is increased by `amount` wei.",
        "withdraw-sender-rcv-EOA-receive": "if the `receive` method of `msg.sender` just accepts all ETH, after a successful `withdraw(amount)` originated by an EOA, the ETH balance of `msg.sender` is increased by `amount` ETH.",
        "no-frozen-credits": "if the sum of all the balances is strictly positive, it is possible to reduce them",
        "no-frozen-assets": "if the contract controls some assets, then someone can transfer them from the contract to some user",
        "exists-at-least-one-balance-change": "after a successful transaction, the credits of at least one account have changed",
        "exists-unique-asset-change": "after a successful transaction to the Bank contract, the ETH balance of exactly one account (except the contract's) have changed",
        "exists-unique-credit-change": "after a successful transaction to the Bank contract, the credit of exactly one address have changed"
    }

}






