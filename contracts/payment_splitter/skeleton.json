{
    "name": "Payment Splitter",
    "specification": "file:spec.md" ,
    "properties": {
        "fair-split-eq": "for every address `a` in `payees`, `released[a] + releasable(a) == (totalReceived * shares[a]) / totalShares`.",
        "fair-split-eq-no-overflow": "for every address `a` in `payees`, `released[a] + releasable(a) == (totalReceived * shares[a]) / totalShares` whenever the expression does not overflow.",
        "fair-split-geq": "for every address `a` in `payees`, `(totalReceived * shares[a]) / totalShares >= released[a]`.",
        "fair-split-geq-no-overflow": "for every address `a` in `payees`, `(totalReceived * shares[a]) / totalShares >= released[a]` whenever the expression does not overflow.",
        "non-zero-payees": "for all addresses `a` in `payees`, `a != address(0)`.",
        "positive-shares": "for all addresses `addr` in `payees`, `shares[addr] > 0`.",
        "releasable-leq-balance": "for all addresses `addr` in `payees`, `releasable(addr)` is less than or equal to the balance of the contract.",
        "releasable-sum-balance": "the sum of the releasable funds for every addresses is equal to the balance of the contract.",
        "release-balance-payee":"for every address `a` in `payees`, after a non-reverting call to `release(a)` the balance of `a` is increased by `releasable(a)`.",
        "release-balance-contract":"for every address `a` in `payees`, after a non-reverting call to `release(a)` the balance of `PaymentSplitter` is decreased by `releasable(a)`.",
        "release-not-revert": "for all addresses `a` in `payees`, if `releasable(a) > 0`, then `release(a)` does not revert.",
        "release-not-revert-receive": "if the address `a` is in `payees`, and its `receive` method just accepts all ETH, and `releasable(a) > 0`, then `release(a)` does not revert",
        "release-release-revert": "two consecutive calls to `release` for the same address `a`, without there being any ETH transfer to the contract in-between calls, revert on the second call.",
        "swappable-call-order": "given two `payees` `a` and `b`, with `a != b`, calling `release(a)` and `release(b)`, independently of the order of the calls, yields the same contract state.",
        "tx-transfer-releasable-receive": "if `releasable(a) > 0` and the address `a` has a `receive` method that just accepts all ETH, then someone can perform a transaction on PaymentSplitter that transfers ETH from the contract to `a`.",
        "tx-transfer-balance-receive": "if the contract balance is non-zero and all payees are EOAs, then eventually someone can perform a transaction on PaymentSplitter that decreases the contract balance."
    },    
    "property-types": {
        "fair-split-eq": "state invariant",
        "fair-split-eq-no-overflow": "state invariant",
        "fair-split-geq": "state invariant",
        "fair-split-geq-no-overflow": "state invariant",
        "non-zero-payeees": "state invariant",
        "positive-shares": "state invariant",
        "releasable-leq-balance": "state invariant",
        "releasable-sum-balance": "state invariant",
        "releasable-balance-payee": "function spec",
        "releasable-balance-contract": "function spec",
        "release-not-revert": "function spec",
        "release-not-revert-receive": "function spec",
        "release-release-revert": "multiple-transition invariant",
        "swappable-call-order": "other",
        "tx-transfer-releasable-receive": "other",
        "tx-transfer-balance-receive": "other"
    }
}
