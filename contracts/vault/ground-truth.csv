property,version,truth,footnote-md
cancel-not-revert,v1,1,
cancel-not-revert,v10,1,
cancel-not-revert,v11,1,
cancel-not-revert,v2,1,
cancel-not-revert,v3,1,
cancel-not-revert,v4,1,
cancel-not-revert,v5,1,
cancel-not-revert,v6,1,
cancel-not-revert,v7,1,
cancel-not-revert,v8,1,
cancel-not-revert,v9,0,"`cancel` reverts unless it is signed by the owner"
cancel-revert,v1,1,
cancel-revert,v10,1,
cancel-revert,v11,1,
cancel-revert,v2,1,
cancel-revert,v3,1,
cancel-revert,v4,1,
cancel-revert,v5,0,"missing access control in `cancel`"
cancel-revert,v6,1,
cancel-revert,v7,1,
cancel-revert,v8,1,
cancel-revert,v9,0,"`cancel` does not revert if it is signed by the owner"
finalize-assets-transfer-receive,v1,1,
finalize-assets-transfer-receive,v10,0,"transfers `amount`-1 wei"
finalize-assets-transfer-receive,v11,1,
finalize-assets-transfer-receive,v2,1,
finalize-assets-transfer-receive,v3,1,
finalize-assets-transfer-receive,v4,1,
finalize-assets-transfer-receive,v5,1,
finalize-assets-transfer-receive,v6,1,
finalize-assets-transfer-receive,v7,1,
finalize-assets-transfer-receive,v8,1,
finalize-assets-transfer-receive,v9,1,
finalize-assets-transfer,v1,0,"The low-level call can trigger further transfers"
finalize-assets-transfer,v10,0,
finalize-assets-transfer,v11,0,
finalize-assets-transfer,v2,0,
finalize-assets-transfer,v3,0,
finalize-assets-transfer,v4,0,
finalize-assets-transfer,v5,0,
finalize-assets-transfer,v6,0,
finalize-assets-transfer,v7,0,
finalize-assets-transfer,v8,1,"`finalize` uses `transfer` instead of low-level call."
finalize-assets-transfer,v9,0,
finalize-before-deadline-revert,v1,1,
finalize-before-deadline-revert,v10,1,
finalize-before-deadline-revert,v11,1,
finalize-before-deadline-revert,v2,1,
finalize-before-deadline-revert,v3,0,"`finalize` does not check the time constraint"
finalize-before-deadline-revert,v4,1,
finalize-before-deadline-revert,v5,1,
finalize-before-deadline-revert,v6,1,
finalize-before-deadline-revert,v7,0,"`finalize` has an inverted inequality in the time constraints"
finalize-before-deadline-revert,v8,1,
finalize-before-deadline-revert,v9,1,
finalize-not-revert,v1,0,"receiver can be a contract whose `receive` method reverts"
finalize-not-revert,v10,0,
finalize-not-revert,v11,0,
finalize-not-revert,v2,0,
finalize-not-revert,v3,0,
finalize-not-revert,v4,0,
finalize-not-revert,v5,0,
finalize-not-revert,v6,0,
finalize-not-revert,v7,0,
finalize-not-revert,v8,0,
finalize-not-revert,v9,0,
finalize-not-revert-eoa,v1,1,
finalize-not-revert-eoa,v10,0,"`finalize` reverts if amount==0"
finalize-not-revert-eoa,v11,1,
finalize-not-revert-eoa,v2,1,
finalize-not-revert-eoa,v3,1,
finalize-not-revert-eoa,v4,1,
finalize-not-revert-eoa,v5,1,
finalize-not-revert-eoa,v6,1,
finalize-not-revert-eoa,v7,0,"inverted time constraint in `finalize`"
finalize-not-revert-eoa,v8,1,
finalize-not-revert-eoa,v9,1,
finalize-or-cancel-twice-revert,v1,1,
finalize-or-cancel-twice-revert,v10,1,
finalize-or-cancel-twice-revert,v11,1,"`finalize` does not update the state, so it can be called twice consecutively."
finalize-or-cancel-twice-revert,v2,1,
finalize-or-cancel-twice-revert,v3,1,
finalize-or-cancel-twice-revert,v4,1,
finalize-or-cancel-twice-revert,v5,1,
finalize-or-cancel-twice-revert,v6,1,
finalize-or-cancel-twice-revert,v7,1,
finalize-or-cancel-twice-revert,v8,1,
finalize-or-cancel-twice-revert,v9,1,
finalize-revert,v1,1,
finalize-revert,v10,1,
finalize-revert,v11,1,
finalize-revert,v2,1,
finalize-revert,v3,0,
finalize-revert,v4,1,
finalize-revert,v5,1,
finalize-revert,v6,1,
finalize-revert,v7,0,
finalize-revert,v8,1,
finalize-revert,v9,1,
finalize-sent-eq-amount,v1,0,"low-level call may have enough gas to enable further transfers"
finalize-sent-eq-amount,v10,0,
finalize-sent-eq-amount,v11,0,
finalize-sent-eq-amount,v10,0,
finalize-sent-eq-amount,v11,0,
finalize-sent-eq-amount,v2,0,
finalize-sent-eq-amount,v3,0,
finalize-sent-eq-amount,v4,0,"low-level call triggers selfdestruct"
finalize-sent-eq-amount,v5,0,
finalize-sent-eq-amount,v6,0,
finalize-sent-eq-amount,v7,0,
finalize-sent-eq-amount,v8,1,"`transfer` does not have enough gas to enable further transfers"
finalize-sent-eq-amount,v9,0,
finalize-sent-leq-amount,v1,1,"if `finalize` reenters `finalize`, then require on state fails. If `finalize` reenters withdraw();finalize(), then time constraint fails."
finalize-sent-leq-amount,v10,1,
finalize-sent-leq-amount,v11,0,"`finalize` can reenter `finalize` since the state is not updated"
finalize-sent-leq-amount,v2,1,
finalize-sent-leq-amount,v3,0,"`finalize` reenters withdraw();finalize()"
finalize-sent-leq-amount,v4,1,"`finalize` is non-reentrant"
finalize-sent-leq-amount,v5,1,
finalize-sent-leq-amount,v6,1,
finalize-sent-leq-amount,v7,1,
finalize-sent-leq-amount,v8,1,"`transfer` does not have enough gas to enable reentrant calls to `finalize`"
finalize-sent-leq-amount,v9,1,
keys-distinct,v1,1,
keys-distinct,v10,1,
keys-distinct,v11,1,
keys-distinct,v2,0,
keys-distinct,v3,1,
keys-distinct,v4,1,
keys-distinct,v5,1,
keys-distinct,v6,1,
keys-distinct,v7,1,
keys-distinct,v8,1,
keys-distinct,v9,1,"Even if the two keys are (temporarily) equal within the execution of `cancel`, this property requires they are distinct inter-calls"
keys-invariant-inter,v1,1,
keys-invariant-inter,v10,1,
keys-invariant-inter,v11,1,
keys-invariant-inter,v2,1,
keys-invariant-inter,v3,1,
keys-invariant-inter,v4,1,
keys-invariant-inter,v5,1,
keys-invariant-inter,v6,1,
keys-invariant-inter,v7,1,
keys-invariant-inter,v8,1,
keys-invariant-inter,v9,1,
keys-invariant-intra,v1,1,
keys-invariant-intra,v2,1,
keys-invariant-intra,v3,1,
keys-invariant-intra,v4,1,
keys-invariant-intra,v5,1,
keys-invariant-intra,v6,1,
keys-invariant-intra,v7,1,
keys-invariant-intra,v8,1,
keys-invariant-intra,v9,0,"`cancel` updates the recovery key before checking `msg.sender`, and then restores it"
okey-rkey-private-withdraw,v1,1,
okey-rkey-private-withdraw,v10,1,
okey-rkey-private-withdraw,v11,1,
okey-rkey-private-withdraw,v2,1,
okey-rkey-private-withdraw,v3,0,"The adversary can fire atomically withdraw() finalize()"
okey-rkey-private-withdraw,v4,1,
okey-rkey-private-withdraw,v5,0,"The adversary can cancel any withdrawal request"
okey-rkey-private-withdraw,v6,1,
okey-rkey-private-withdraw,v7,0,"`finalize` cannot be performed because of the wrong time constraint"
okey-rkey-private-withdraw,v8,1,
okey-rkey-private-withdraw,v9,0,"The adversary can cancel any withdrawal request"
receive-not-revert,v1,1,
receive-not-revert,v10,1,
receive-not-revert,v11,1,
receive-not-revert,v2,1,
receive-not-revert,v3,1,
receive-not-revert,v4,1,
receive-not-revert,v5,1,
receive-not-revert,v6,1,
receive-not-revert,v7,1,
receive-not-revert,v8,1,
receive-not-revert,v9,1,
rkey-no-withdraw,v1,1,
rkey-no-withdraw,v10,1,
rkey-no-withdraw,v11,1,
rkey-no-withdraw,v2,1,
rkey-no-withdraw,v3,0,"The adversary can fire atomically withdraw() finalize()"
rkey-no-withdraw,v4,1,
rkey-no-withdraw,v5,1,"Anyone can cancel any withdrawal request"
rkey-no-withdraw,v6,1,
rkey-no-withdraw,v7,1,
rkey-no-withdraw,v8,1,
rkey-no-withdraw,v9,1,"Only owner can cancel withdrawal requests"
state-idle-req-inter,v1,1,
state-idle-req-inter,v10,1,
state-idle-req-inter,v11,1,
state-idle-req-inter,v2,1,
state-idle-req-inter,v3,1,
state-idle-req-inter,v4,1,
state-idle-req-inter,v5,1,
state-idle-req-inter,v6,1,
state-idle-req-inter,v7,1,
state-idle-req-inter,v8,1,
state-idle-req-inter,v9,1,
state-idle-req-intra,v1,1,
state-idle-req-intra,v10,1,
state-idle-req-intra,v11,1,
state-idle-req-intra,v2,1,
state-idle-req-intra,v3,1,
state-idle-req-intra,v4,1,
state-idle-req-intra,v5,1,
state-idle-req-intra,v6,1,
state-idle-req-intra,v7,1,
state-idle-req-intra,v8,1,
state-idle-req-intra,v9,1,
state-req-amount-consistent,v1,1,
state-req-amount-consistent,v10,1,
state-req-amount-consistent,v11,1,
state-req-amount-consistent,v2,1,
state-req-amount-consistent,v3,1,
state-req-amount-consistent,v4,1,
state-req-amount-consistent,v5,1,
state-req-amount-consistent,v6,0,"missing check `amount_ <= address(this).balance` in `withdraw`."
state-req-amount-consistent,v7,1,
state-req-amount-consistent,v8,1,
state-req-amount-consistent,v9,1,
state-update-receive,v1,1,
state-update-receive,v10,1,
state-update-receive,v11,0,"`finalize` does not update the state. Transition REQ -> REQ"
state-update-receive,v2,1,
state-update-receive,v3,1,
state-update-receive,v4,1,
state-update-receive,v5,1,
state-update-receive,v6,1,
state-update-receive,v7,1,
state-update-receive,v8,1,
state-update-receive,v9,1,
state-update,v1,0,"the receiver of `finalize` has a `receive` that calls `withdraw`. Transition REQ -> REQ"
state-update,v10,0,
state-update,v11,0,"`finalize` does not update the state. Transition REQ -> REQ"
state-update,v2,0,
state-update,v3,0,
state-update,v4,0,
state-update,v5,0,
state-update,v6,0,
state-update,v7,0,
state-update,v8,0,
state-update,v9,0,
tx-idle-req,v1,0,"`owner` is a contract without a method to call `withdraw`"
tx-idle-req,v10,0,
tx-idle-req,v11,0,
tx-idle-req,v2,0,
tx-idle-req,v3,0,
tx-idle-req,v4,0,
tx-idle-req,v5,0,
tx-idle-req,v6,0,
tx-idle-req,v7,0,
tx-idle-req,v8,0,
tx-idle-req,v9,0,
tx-idle-req-eoa,v1,1,
tx-idle-req-eoa,v10,1,
tx-idle-req-eoa,v11,1,
tx-idle-req-eoa,v2,1,
tx-idle-req-eoa,v3,1,
tx-idle-req-eoa,v4,1,
tx-idle-req-eoa,v5,1,
tx-idle-req-eoa,v6,1,
tx-idle-req-eoa,v7,1,
tx-idle-req-eoa,v8,1,
tx-idle-req-eoa,v9,1,
tx-owner-assets-transfer,v1,0,"`receiver` is a contract whose `receive` method reverts"
tx-owner-assets-transfer,v10,0,
tx-owner-assets-transfer,v11,0,
tx-owner-assets-transfer,v2,0,
tx-owner-assets-transfer,v3,0,
tx-owner-assets-transfer,v4,0,
tx-owner-assets-transfer,v5,0,
tx-owner-assets-transfer,v6,0,
tx-owner-assets-transfer,v7,0,
tx-owner-assets-transfer,v8,0,
tx-owner-assets-transfer,v9,0,
tx-owner-assets-transfer-eoa,v1,1,
tx-owner-assets-transfer-eoa,v10,0,"finalize transfers `amount`-1 wei"
tx-owner-assets-transfer-eoa,v11,0,"`finalize` does not update the state: if called twice, the property is violated."
tx-owner-assets-transfer-eoa,v2,1,
tx-owner-assets-transfer-eoa,v3,1,
tx-owner-assets-transfer-eoa,v4,1,
tx-owner-assets-transfer-eoa,v5,1,
tx-owner-assets-transfer-eoa,v6,0,"missing check `amount_ <= address(this).balance` in `withdraw`"
tx-owner-assets-transfer-eoa,v7,0,"wrong time constraint in `finalize`"
tx-owner-assets-transfer-eoa,v8,1,  
tx-owner-assets-transfer-eoa,v9,1,
tx-req-idle,v1,0,"`owner` and `recovery` are contracts without a method to call `finalize` or `cancel`"
tx-req-idle,v10,0,
tx-req-idle,v11,0,
tx-req-idle,v2,0,
tx-req-idle,v3,0,
tx-req-idle,v4,0,
tx-req-idle,v5,1,"anyone can call `cancel`"
tx-req-idle,v6,0,
tx-req-idle,v7,0,
tx-req-idle,v8,0,
tx-req-idle,v9,0,
tx-req-idle-eoa,v1,1,"`cancel` is always possible since `recovery` is a non-zero EOA"
tx-req-idle-eoa,v10,1, 
tx-req-idle-eoa,v11,1, 
tx-req-idle-eoa,v2,1,"`recovery` cannot be the zero address" 
tx-req-idle-eoa,v3,1, 
tx-req-idle-eoa,v4,1, 
tx-req-idle-eoa,v5,1, 
tx-req-idle-eoa,v6,1, 
tx-req-idle-eoa,v7,1, 
tx-req-idle-eoa,v8,1, 
tx-req-idle-eoa,v9,0,"`cancel` uses the `owner` key, which could be a contract without a method to call `cancel`" 
tx-tx-assets-transfer,v1,0,"`owner` is a contract without a method to call `withdraw`"
tx-tx-assets-transfer,v10,0,
tx-tx-assets-transfer,v11,0,
tx-tx-assets-transfer,v2,0,
tx-tx-assets-transfer,v3,0,
tx-tx-assets-transfer,v4,0,
tx-tx-assets-transfer,v5,0,
tx-tx-assets-transfer,v6,0,
tx-tx-assets-transfer,v7,0,
tx-tx-assets-transfer,v8,0,
tx-tx-assets-transfer,v9,0,
tx-tx-assets-transfer-eoa,v1,0,"`recovery` front-runs the call to `finalize` with a call to `cancel`"
tx-tx-assets-transfer-eoa,v10,0,
tx-tx-assets-transfer-eoa,v11,0,
tx-tx-assets-transfer-eoa,v2,0,
tx-tx-assets-transfer-eoa,v3,0,
tx-tx-assets-transfer-eoa,v4,0,
tx-tx-assets-transfer-eoa,v5,0,
tx-tx-assets-transfer-eoa,v6,0,
tx-tx-assets-transfer-eoa,v7,1,"wrong time constraint in `finalize` makes it possible two fire withdraw() and finalize() atomically"
tx-tx-assets-transfer-eoa,v8,0,
tx-tx-assets-transfer-eoa,v9,0,
tx-tx-assets-transfer-eoa-private,v1,1,
tx-tx-assets-transfer-eoa-private,v10,0,"Not possible to transfer the entire balance, because `finalize` transfers `amount`-1 wei"
tx-tx-assets-transfer-eoa-private,v11,1,
tx-tx-assets-transfer-eoa-private,v2,1,
tx-tx-assets-transfer-eoa-private,v3,1,
tx-tx-assets-transfer-eoa-private,v4,1,
tx-tx-assets-transfer-eoa-private,v5,0,"Anyone can call `cancel`"
tx-tx-assets-transfer-eoa-private,v6,1,
tx-tx-assets-transfer-eoa-private,v7,1,
tx-tx-assets-transfer-eoa-private,v8,1,
tx-tx-assets-transfer-eoa-private,v9,1,
withdraw-finalize-not-revert,v1,0,"`receiver` can be a contract whose `receive` method reverts"
withdraw-finalize-not-revert,v10,0,
withdraw-finalize-not-revert,v11,0,
withdraw-finalize-not-revert,v2,0,
withdraw-finalize-not-revert,v3,0,
withdraw-finalize-not-revert,v4,0,
withdraw-finalize-not-revert,v5,0,
withdraw-finalize-not-revert,v6,0,
withdraw-finalize-not-revert,v7,0,
withdraw-finalize-not-revert,v8,0,
withdraw-finalize-not-revert,v9,0,
withdraw-finalize-not-revert-eoa,v1,1,
withdraw-finalize-not-revert-eoa,v10,0,"`finalize` reverts if amount==0"
withdraw-finalize-not-revert-eoa,v11,1,
withdraw-finalize-not-revert-eoa,v2,1,
withdraw-finalize-not-revert-eoa,v3,1,
withdraw-finalize-not-revert-eoa,v4,1,
withdraw-finalize-not-revert-eoa,v5,1,
withdraw-finalize-not-revert-eoa,v6,0,"`amount` can exceed the contract balance"
withdraw-finalize-not-revert-eoa,v7,1,"wrong time constraint in `finalize`"
withdraw-finalize-not-revert-eoa,v8,1,
withdraw-finalize-not-revert-eoa,v9,1,
withdraw-finalize-revert-inter,v1,1,
withdraw-finalize-revert-inter,v10,1,
withdraw-finalize-revert-inter,v11,1,
withdraw-finalize-revert-inter,v2,1,
withdraw-finalize-revert-inter,v3,0,"`finalize` does not enforce the time constraint"
withdraw-finalize-revert-inter,v4,1,
withdraw-finalize-revert-inter,v5,1,
withdraw-finalize-revert-inter,v6,1,
withdraw-finalize-revert-inter,v7,0,"`finalize` has an inverted inequality in the time constraints"
withdraw-finalize-revert-inter,v8,1,
withdraw-finalize-revert-inter,v9,1,
withdraw-not-revert,v1,1,
withdraw-not-revert,v10,1,
withdraw-not-revert,v11,1,
withdraw-not-revert,v2,1,
withdraw-not-revert,v3,1,
withdraw-not-revert,v4,1,
withdraw-not-revert,v5,1,
withdraw-not-revert,v6,1,
withdraw-not-revert,v7,1,
withdraw-not-revert,v8,1,
withdraw-not-revert,v9,1,
withdraw-revert,v1,1,
withdraw-revert,v10,1,
withdraw-revert,v11,1,
withdraw-revert,v2,1,
withdraw-revert,v3,1,
withdraw-revert,v4,1,
withdraw-revert,v5,1,
withdraw-revert,v6,0,"missing check `amount_ <= address(this).balance` in `withdraw`."
withdraw-revert,v7,1,
withdraw-revert,v8,1,
withdraw-revert,v9,1,
withdraw-withdraw-revert,v1,1,
withdraw-withdraw-revert,v10,1,
withdraw-withdraw-revert,v11,1,
withdraw-withdraw-revert,v2,1,
withdraw-withdraw-revert,v3,1,
withdraw-withdraw-revert,v4,1,
withdraw-withdraw-revert,v5,1,
withdraw-withdraw-revert,v6,1,
withdraw-withdraw-revert,v7,1,
withdraw-withdraw-revert,v8,1,
withdraw-withdraw-revert,v9,1,